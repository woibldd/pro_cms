{"version":3,"file":"pages/activity/staking/wallet.js","sources":["webpack:///./pages/activity/staking/wallet.js"],"sourcesContent":["// import detectEthereumProvider from '@metamask/detect-provider';\r\nimport eventemitter3 from 'eventemitter3'\r\n// import { transfer16 } from '../common/common'\r\nexport function transfer16(val='1'){\r\n  val = isNaN(Number(val))? 1 : Number(val)\r\n  return \"0x\" + val.toString(16)\r\n}\r\nclass Wallet extends eventemitter3 {\r\n  constructor() {\r\n    super()\r\n    this._accounts = []\r\n    this._chainId = 0\r\n    this._walletPlatform = 'bitkeep'\r\n  }\r\n\r\n  // 是否安装 bitkeep 钱包\r\n  isInstall() {\r\n    const isInstalled = !!window.ethereum && !!window.isBitKeep;\r\n    !isInstalled && console.warn(\"no installed bitkeep\")\r\n    return isInstalled;\r\n  }\r\n\r\n  // 是否连接中\r\n  isConnected() {\r\n    return window.ethereum && window.ethereum.isConnected()\r\n  }\r\n\r\n  // 连接钱包\r\n  async connect() {\r\n    if (this.isInstall()) {\r\n      const Accounts = await ethereum.request({ method: 'eth_requestAccounts' })\r\n      this.initEvent()\r\n      return Accounts[0]\r\n    } else {\r\n      return {\r\n        status: 50001,\r\n        message: 'please download bitkeep chrome '\r\n      }\r\n    }\r\n  }\r\n\r\n  // 切换地址\r\n  selectedAddress() {\r\n    return window.ethereum && ethereum.selectedAddress\r\n  }\r\n\r\n  // 获取钱包信息\r\n  getWalletInfo(){\r\n    return {\r\n      address: window.ethereum && ethereum.selectedAddress,\r\n      chainName: window.ethereum && window.ethereum.chainName || 'eth',\r\n      chainId: window.ethereum && window.ethereum.chainId || '1',\r\n      walletId: '',\r\n      walletPlatform: this.getWalletPlatform()\r\n    }\r\n  }\r\n\r\n  // 获取 chain ID\r\n  async getChainId() {\r\n    return window.ethereum && window.ethereum.request({ method: 'eth_chainId' })\r\n  }\r\n\r\n  // 切换 chain ID\r\n  async switchChainId(chainId ,address){\r\n    if(!address){\r\n      const [ nAddress ] =  await this.getAccounts()\r\n      address = nAddress\r\n    }\r\n    return window.ethereum && window.ethereum.request({ method: 'wallet_switchEthereumChain', params:[ { chainId:transfer16(chainId) }, address] })\r\n  }\r\n\r\n  // 获取钱包标识\r\n  getWalletPlatform(){\r\n      return this._walletPlatform\r\n  } \r\n\r\n  // 获取钱包账号\r\n  async getAccounts() {\r\n    return window.ethereum ?  window.ethereum.request({method:\"eth_accounts\"}) : []\r\n  }\r\n\r\n  // 登录签名\r\n  async LoginSign(dataToSign, address) {\r\n    console.log(dataToSign, address,'dataToSign, addressdataToSign, addressdataToSign, address')\r\n    return await window.ethereum.request({method:\"personal_sign\", params:[dataToSign, address], from: address})\r\n    // return await window.ethereum.signMessage({ data: dataToSign })\r\n  }\r\n\r\n\r\n  initEvent() {\r\n    ethereum.removeAllListeners && ethereum.removeAllListeners()\r\n    // ethereum.removeListener && ethereum.removeListener('chainChanged')\r\n    ethereum.on('accountsChanged', async (...arg) => {\r\n      this.emit('accountsChanged', ...arg)\r\n    })\r\n    ethereum.on('chainChanged', async (...arg) => {\r\n      this.emit('chainChanged', ...arg)\r\n    })\r\n  }\r\n}\r\n\r\nexport const wallet = new Wallet()\r\n"],"mappings":";;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA5FA;AACA;AA6FA;;;;A","sourceRoot":""}